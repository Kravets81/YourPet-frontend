{"version":3,"file":"static/js/732.e40cbac7.chunk.js","mappings":"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","sources":["images/icon/check.svg","images/icon/error_red.svg","components/Shcema/Schema.jsx","components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheck(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.0001 7L9.0001 18L4 13\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.2a64553bc65df77be06926ee8669f056.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgErrorRed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 5L5 19M5.00004 5L19 19\",\n    stroke: \"#F43F5E\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgErrorRed);\nexport default __webpack_public_path__ + \"static/media/error_red.979527430babc874f1a86f2736f96771.svg\";\nexport { ForwardRef as ReactComponent };","import * as yup from 'yup';\n\nexport const registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name is required')\n    .matches(/^(?=.{2,16}$)[A-Za-z ]+$/, 'Please enter valid name')\n    .min(6, 'Enter more than 6 characters')\n    .max(16, 'Max 16'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Enter more than 6 characters')\n    .max(16, 'Max 16')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n  confirmPassword: yup\n    .string()\n    .required('Confirm your password')\n    .oneOf([yup.ref('password'), null], 'Passwords must match!'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Enter more than 6 characters')\n    .max(16, 'Max 16')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n});\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const Textfield = styled(TextField)`\n  & .MuiInputBase-root.MuiOutlinedInput-root {\n    border-radius: 40px;\n    color: #888888;\n  }\n\n  & .MuiFormHelperText-root {\n    color: #00c3ad;\n  }\n\n  &.green-border .MuiOutlinedInput-notchedOutline {\n    border-color: #00c3ad;\n    border-width: 2px;\n  }\n`;\n\nexport const buttonStyles = {\n  boxShadow: 'none',\n  mt: { mobile: '10px', tablet: '20px' },\n  textTransform: 'none',\n  width: '100%',\n  height: '48px',\n  border: '2px solid #54ADFF',\n  borderRadius: '40px',\n  fontWeight: 600,\n  fontSize: '20px',\n  lineHeight: '27px',\n  padding: '9px 20px',\n  backgroundColor: 'rgba(84, 173, 255, 1)',\n  color: 'rgba(255, 255, 255, 1)',\n  '&:hover': {\n    backgroundColor: '#54ADFF',\n    color: '#FEF9F9',\n  },\n\n  '&:active': {\n    backgroundColor: '#54ADFF',\n    color: '#FEF9F9',\n  },\n  '&:focus': {\n    backgroundColor: '#54ADFF',\n    color: '#FEF9F9',\n  },\n};\n\nexport const cardStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '24px',\n  minHeight: { mobile: '441px', tablet: '481px' },\n  width: { mobile: '280px', tablet: '608px' },\n  boxShadow: '3px 8px 14px rgba(136, 198, 253, 0.19)',\n  borderRadius: { mobile: '20px', tablet: '40px' },\n\n  ml: 'auto',\n  mr: 'auto',\n  mb: { mobile: '36px', tablet: '119px' },\n  padding: { mobile: '35px 12px', tablet: '50px 75px' },\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nexport const titleStyles = {\n  textAlign: 'center',\n  fontFamily: 'Manrope',\n  fontWeight: '500',\n  fontSize: { mobile: '24px', tablet: '36px' },\n  lineHeight: { mobile: '33px', tablet: '49px' },\n  color: '#111111',\n};\n\nexport const textStyles = {\n  textAlign: 'center',\n  fontFamily: 'Manrope',\n  fontWeight: '400',\n  fontSize: { mobile: '12px', tablet: '14px' },\n  lineHeight: { mobile: '16px', tablet: '18px' },\n  color: '#888888',\n};\n\nexport const linkStyles = {\n  textDecoration: 'none',\n  fontSize: { mobile: '12px', tablet: '14px' },\n  lineHeight: { mobile: '16px', tablet: '18px' },\n  color: '#54ADFF',\n  textDecorationLine: 'underline',\n};\n","import {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { registerSchema } from '../Shcema/Schema';\nimport { useDispatch } from 'react-redux';\nimport {\n  Button,\n  IconButton,\n  InputAdornment,\n  Card,\n  Typography,\n  Box,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  Textfield,\n  buttonStyles,\n  cardStyles,\n  titleStyles,\n  textStyles,\n  linkStyles,\n} from './RegistrationForm.styled';\nimport { ReactComponent as IconClose } from '../../images/icon/error_red.svg';\nimport { ReactComponent as IconCheck } from '../../images/icon/check.svg';\nimport authOperations from 'redux/auth/operations';\n\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nfunction RegistrationForm() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [validName, setValidName] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [validPassword, setValidPassword] = useState(\"\");\n  const [validConfirmPass, setValidConfirmPass] = useState(false);\n  const [pass, setPass] = useState('');\n\n    const dispatch = useDispatch();\n\n  const handleTogglePasswordVisibility = field => {\n    if (field === 'password') {\n      setShowPassword(prev => !prev);\n    } else if (field === 'confirmPassword') {\n      setShowConfirmPassword(prev => !prev);\n    }\n  };\n\n  const onHandleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        const validNames = /^(?=.{2,16}$)[A-Za-z ]+$/i.test(value);\n        return setValidName(validNames);\n      case 'email':\n        const validEmaile = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\n        return setValidEmail(validEmaile);\n      case 'password':\n        const validPasswords =\n            /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/i.test(value);\n            setPass(value);\n        return setValidPassword(validPasswords);\n      default:\n        return;\n    }\n  };\n\n  const handleConfirmPasswordChange = event => {\n    const { value } = event.target;\n    setValidConfirmPass(value === pass);\n  };\n  const handleSubmitForm = async (values, { setErrors, resetForm }) => {\n    try {\n      await registerSchema.validate(values, { abortEarly: false });\n\n      const newUser = {\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      };\n      console.log(newUser);\n      dispatch(\n        authOperations.register(newUser)\n      );\n\n      resetForm();\n      setValidName(\"\");\n      setValidEmail(\"\");\n      setValidPassword(\"\");\n      setValidConfirmPass(false);\n    } catch (validationErrors) {\n      console.log(validationErrors.message)\n      // const errors = {};\n      // validationErrors.inner.forEach(error => {\n      //   errors[error.path] = error.message;\n      // });\n      // setErrors(errors);\n    }\n  };\n\n  return (\n    <>\n      <Card sx={cardStyles}>\n        <Typography sx={titleStyles}>Registration</Typography>\n        <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\n          {({ values, errors, touched, handleSubmit, handleChange }) => (\n            <Form>\n              <Field\n                as={Textfield}\n                placeholder=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                fullWidth\n                focused\n                margin=\"dense\"\n                onChange={event => {\n                  handleChange(event);\n                  onHandleChange(event);\n                }}\n                value={values.name}\n                error={touched.name && Boolean(errors.name)}\n                // helperText={touched.name && errors.name}\n                helperText={\n                  touched.name && errors.name ? (\n                    <ErrorMessage name=\"name\" />\n                  ) : (\n                    ' '\n                  )\n                }\n                InputProps={{\n                  color:\n                    touched.name && errors.name\n                      ? 'error'\n                      : validName\n                      ? 'success'\n                      : 'primary',\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      {touched.name && errors.name ? (\n                        <IconClose\n                          onClick={() => {\n                            handleChange({\n                              target: {\n                                name: 'name',\n                                value: '',\n                              },\n                            });\n                            setValidName(\"\");\n                          }}\n                        />\n                      ) : validName ? (\n                        <IconCheck stroke=\"#00C3AD\" />\n                      ) : null}\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n              <Field\n                as={Textfield}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                fullWidth\n                focused\n                margin=\"dense\"\n                onChange={event => {\n                  handleChange(event);\n                  onHandleChange(event);\n                }}\n                value={values.email}\n                error={touched.email && Boolean(errors.email)}\n                // helperText={touched.email && errors.email}\n                helperText={\n                  touched.email && errors.email ? (\n                    <ErrorMessage name=\"email\" />\n                  ) : (\n                    ' '\n                  )\n                }\n                InputProps={{\n                  color:\n                    touched.email && errors.email\n                      ? 'error'\n                      : validEmail\n                      ? 'success'\n                      : 'primary',\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      {touched.email && errors.email ? (\n                        <IconClose\n                          onClick={() => {\n                            handleChange({\n                              target: {\n                                name: 'email',\n                                value: '',\n                              },\n                            });\n                            setValidEmail(\"\");\n                          }}\n                        />\n                      ) : validEmail ? (\n                        <IconCheck stroke=\"#00C3AD\" />\n                      ) : null}\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Field\n                as={Textfield}\n                placeholder=\"Password\"\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                fullWidth\n                focused\n                margin=\"dense\"\n                InputProps={{\n                  color:\n                    touched.password && errors.password\n                      ? 'error'\n                      : validPassword\n                      ? 'success'\n                      : 'primary',\n                  endAdornment: (\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => handleTogglePasswordVisibility('password')}\n                      edge=\"end\"\n                      size=\"small\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  ),\n                }}\n                onChange={event => {\n                  handleChange(event);\n                  onHandleChange(event);\n                }}\n                value={values.password}\n                error={touched.password && Boolean(errors.password)}\n                // helperText={touched.password && errors.password}\n                helperText={\n                  touched.password && errors.password ? (\n                    <ErrorMessage name=\"password\" />\n                  ) : (\n                    ' '\n                  )\n                }\n              />\n              <Field\n                as={Textfield}\n                placeholder=\"Confirm Password\"\n                type={showConfirmPassword ? 'text' : 'password'}\n                name=\"confirmPassword\"\n                fullWidth\n                focused\n                margin=\"dense\"\n                InputProps={{\n                  color:\n                    touched.confirmPassword && errors.confirmPassword\n                      ? 'error'\n                      : validConfirmPass\n                      ? 'success'\n                      : 'primary',\n                  endAdornment: (\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() =>\n                        handleTogglePasswordVisibility('confirmPassword')\n                      }\n                      edge=\"end\"\n                      size=\"small\"\n                    >\n                      {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  ),\n                }}\n                onChange={event => {\n                  handleChange(event);\n                  handleConfirmPasswordChange(event);\n                }}\n                value={values.confirmPassword}\n                error={\n                  touched.confirmPassword && Boolean(errors.confirmPassword)\n                }\n                // helperText={touched.confirmPassword && errors.confirmPassword}\n                helperText={\n                  touched.confirmPassword && errors.confirmPassword ? (\n                    <ErrorMessage name=\"confirmPassword\" />\n                  ) : (\n                    ' '\n                  )\n                }\n              />\n\n              <Button\n                variant=\"outlined\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                sx={buttonStyles}\n              >\n                Registration\n              </Button>\n            </Form>\n          )}\n        </Formik>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n          <Typography sx={textStyles}>\n            Already have an account?{' '}\n            <Link to=\"/login\">\n              <Typography component=\"span\" sx={linkStyles}>\n                Login\n              </Typography>\n            </Link>\n          </Typography>\n        </Box>\n      </Card>\n    </>\n  );\n}\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from '../components/RegistrationForm';\n\nfunction RegisterPage() {\n  return <RegistrationForm />;\n}\n\nexport default RegisterPage;\n"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCheck","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","SvgErrorRed","stroke","registerSchema","yup","shape","name","required","matches","min","max","email","password","confirmPassword","oneOf","loginSchema","Textfield","styled","TextField","buttonStyles","boxShadow","mt","mobile","tablet","textTransform","border","borderRadius","fontWeight","fontSize","lineHeight","padding","backgroundColor","color","cardStyles","display","flexDirection","gap","minHeight","ml","mr","mb","justifyContent","alignItems","titleStyles","textAlign","fontFamily","textStyles","linkStyles","textDecoration","textDecorationLine","initialValues","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","validName","setValidName","validEmail","setValidEmail","validPassword","setValidPassword","validConfirmPass","setValidConfirmPass","pass","setPass","dispatch","useDispatch","handleTogglePasswordVisibility","field","prev","onHandleChange","value","validNames","test","validEmaile","validPasswords","handleSubmitForm","values","setErrors","resetForm","abortEarly","newUser","console","log","authOperations","message","Card","sx","Typography","onSubmit","errors","touched","handleSubmit","handleChange","as","placeholder","type","fullWidth","focused","margin","onChange","event","error","Boolean","helperText","InputProps","endAdornment","InputAdornment","position","onClick","IconButton","edge","size","Visibility","VisibilityOff","handleConfirmPasswordChange","Button","variant","Box","to","component"],"sourceRoot":""}