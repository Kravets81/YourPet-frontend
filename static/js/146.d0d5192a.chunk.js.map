{"version":3,"file":"static/js/146.d0d5192a.chunk.js","mappings":"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","sources":["hooks/useModal.js","components/UserData/UserData.styled.jsx","components/UserData/EditPhoto.jsx","components/UserData/UserData.jsx","redux/pets/selectors.js","components/UserPetsData/UserPetsData.styled.jsx","components/UserPetsData/UserPetsList/UserPetsList.styled.jsx","components/UserPetsData/UserPetsList/UserPetItem.jsx","components/UserPetsData/UserPetsList/UserPetsList.jsx","components/UserPetsData/NotFound.styled.jsx","components/UserPetsData/NotFound.jsx","components/UserPetsData/UserPetsData.jsx","pages/UserPage.jsx"],"sourcesContent":["const { useState } = require('react');\n\nconst useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n\n  return [isOpen, toggleModal, setIsOpen];\n};\n\nexport default useModal;\n","import styled from '@emotion/styled';\nimport { CiEdit, CiLogout } from 'react-icons/ci';\nimport { BsCamera } from 'react-icons/bs';\nimport { RxCross1 } from 'react-icons/rx';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { Field } from 'formik';\n// import { Typography } from '@mui/material';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0 40px 0;\n\n  @media screen and (min-width: 768px) {\n    margin: 35px 0 40px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: inline-flex;\n\n    margin: 35px 32px 0 0;\n  }\n`;\n\nexport const Title = styled.p`\n  color: black;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  height: 517px;\n  padding: 20px 8px 20px 8px;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n  background-color: #fff;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap-reverse;\n\n    width: 704px;\n    height: 268px;\n    padding: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    height: 520px;\n\n    padding: 20px 17px 0 17px;\n  }\n`;\n\nexport const PictureBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const PictureWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const Picture = styled.img`\n  display: block;\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  background-color: #ebebeb;\n  object-fit: cover;\n`;\n\nexport const EditPicture = styled.div`\n  display: flex;\n\n  justify-content: center;\n\n  margin-bottom: 25px;\n`;\n\nexport const EditBtnPicture = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 120px;\n  height: 25px;\n\n  border: none;\n  background-color: #fff;\n  padding: 0;\n\n  cursor: pointer;\n  font-size: 12px;\n  letter-spacing: 0.04em;\n`;\n\nexport const IconWrapperVerify = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 5px;\n`;\n\nexport const IconWrapperRefuse = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n\n  font-weight: 600;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    width: 355px;\n\n    font-weight: 600;\n    font-size: 18px;\n    letter-spacing: 0.04em;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 190px;\n  height: 28px;\n\n  padding: 0 40px 0 15px;\n  border: 1px solid #54adff;\n  border-radius: 20px;\n  outline: none;\n  background-color: #fff;\n\n  font-size: 12px;\n  letter-spacing: 0.04em;\n  color: #000000;\n\n  &.editing {\n    border: 1px solid #20e820;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 255px;\n    height: 32px;\n\n    font-size: 16px;\n    letter-spacing: 0.04em;\n  }\n`;\n\nexport const LogOut = styled.div`\n  margin-top: 25px;\n  display: flex;\n  @media screen and (min-width: 768px) {\n    margin-top: 15px;\n  }\n`;\n\nexport const BtnLogOut = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: none;\n  background-color: #fff;\n  padding: 0;\n\n  cursor: pointer;\n  color: #888888;\n  font-size: 16px;\n  letter-spacing: 0.04em;\n`;\n\nexport const IconLogOut = styled(CiLogout)`\n  margin-right: 10px;\n\n  color: #54adff;\n  font-size: 25px;\n`;\n\nexport const Camera = styled(BsCamera)`\n  margin-right: 10px;\n  color: #54adff;\n  font-size: 18px;\n`;\n\nexport const IconEdit = styled(CiEdit)`\n  position: absolute;\n  left: 88%;\n\n  font-size: 20px;\n  cursor: pointer;\n  color: #54adff;\n\n  @media screen and (min-width: 768px) {\n    left: 90%;\n    font-size: 23px;\n  }\n\n  :hover {\n    color: red;\n  }\n`;\n\nexport const BoxIconVerify = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  left: 89%;\n\n  @media screen and (min-width: 768px) {\n    left: 90.5%;\n  }\n`;\n\nexport const IconVerify = styled(AiOutlineCheck)`\n  font-size: 18px;\n\n  cursor: pointer;\n  color: #20e820;\n\n  @media screen and (min-width: 768px) {\n    font-size: 21px;\n  }\n`;\n\nexport const IconRefuse = styled(RxCross1)`\n  font-size: 18px;\n\n  cursor: pointer;\n  color: #e82d20;\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatars } from '../../redux/auth/operations ';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\n\nimport avatarDefault from 'images/Avatar/avatarDefault.png';\n\nimport {\n  PictureBox,\n  PictureWrapper,\n  EditPicture,\n  EditBtnPicture,\n  IconWrapperVerify,\n  IconWrapperRefuse,\n  Picture,\n  Camera,\n  IconVerify,\n  IconRefuse,\n} from './UserData.styled';\n\nconst EditPhoto = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditingPhoto, setIsEditingPhoto] = useState(false);\n\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const { avatarURL } = useSelector(selectUser);\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleEditPhoto = () => {\n    setIsEditingPhoto(true);\n    fileInputRef.current.click();\n  };\n\n  const handleConfirmPhoto = () => {\n    if (!selectedFile) {\n      return;\n    }\n\n    setIsEditingPhoto(false);\n\n    const updatedData = new FormData();\n    updatedData.append('image', selectedFile, selectedFile.name);\n    dispatch(updateAvatars(updatedData));\n  };\n\n  const handleCancelPhoto = () => {\n    setIsEditingPhoto(false);\n    setSelectedFile(null);\n  };\n\n  const handleButtonClick = () => {\n    if (isEditingPhoto) {\n      handleConfirmPhoto();\n    } else {\n      handleEditPhoto();\n    }\n  };\n\n  return (\n    <PictureBox>\n      <PictureWrapper>\n        {selectedFile ? (\n          <Picture src={URL.createObjectURL(selectedFile)} alt=\"Photo\" />\n        ) : (\n          <Picture src={avatarURL || avatarDefault} alt=\"User\" />\n        )}\n      </PictureWrapper>\n\n      <EditPicture>\n        <EditBtnPicture onClick={handleButtonClick}>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            style={{ display: 'none' }}\n            onChange={handleFileChange}\n          />\n          {isEditingPhoto ? (\n            <>\n              <IconWrapperVerify>\n                <IconVerify onClick={handleConfirmPhoto} />\n              </IconWrapperVerify>\n              <span>Confirm</span>\n              <IconWrapperRefuse>\n                <IconRefuse onClick={handleCancelPhoto} />\n              </IconWrapperRefuse>\n            </>\n          ) : (\n            <>\n              <Camera />\n              <span>Edit photo</span>\n            </>\n          )}\n        </EditBtnPicture>\n      </EditPicture>\n    </PictureBox>\n  );\n};\n\nexport default EditPhoto;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\n\n// import { logout } from 'redux/auth/operations';\nimport {updateUser } from '../../redux/auth/operations ';\nimport { selectUser } from 'redux/auth/selectors';\n\n// import LogoutModal from '../Modal/LogoutModal';\n\nimport useModal from 'hooks/useModal';\nimport EditPhoto from './EditPhoto';\n\nimport {\n  Container,\n  Box,\n  Title,\n  Label,\n  Input,\n  IconLogOut,\n  IconEdit,\n  LogOut,\n  BtnLogOut,\n  BoxIconVerify,\n  IconVerify,\n} from './UserData.styled';\n\nconst validationSchema = yup.object().shape({\n  Name: yup.string().min(3).max(16),\n  Email: yup.string().email('Invalid email'),\n  Phone: yup.string(),\n  Birthday: yup.string(),\n  City: yup.string(),\n});\n\nconst UserData = () => {\n  const dispatch = useDispatch();\n  const { name, email, phone, birthday, city } = useSelector(selectUser);\n\n\n\n  const initialValues = {\n    Name: name || 'Name',\n    Email: email || 'anna00@gmail.com|',\n    Phone: phone || '+38000000000',\n    Birthday: birthday || '00.00.0000',\n    City: city || 'Kyiv',\n  };\n\n  const [activeInput, setActiveInput] = useState(null);\n  const [formValues, setFormValues] = useState(initialValues);\n  const [ toggleModal] = useModal();\n  // isOpen,\n\n  const handleFieldChange = (fieldName, fieldValue) => {\n    // console.log(\"fieldName\", fieldName,\"fieldValue\", fieldValue)\n    // console.log(\"FormValues\", formValues)\n    // console.log(\"NAME\", name)\n    setActiveInput(fieldName);\n    setFormValues(prevValues => ({\n      ...prevValues,\n      [fieldName]: fieldValue,\n    }));\n  };\n\n  const handleFormSubmit = values => {\n    const updatedValues = {\n      ...formValues,\n      ...values,\n    };\n\n    const hasEmptyValues = Object.values(updatedValues).some(\n      value => value === undefined || value === ''\n    );\n\n    if (hasEmptyValues) {\n      return;\n    }\n\n    const updatedData = new FormData();\n    updatedData.append('name', updatedValues.Name);\n    updatedData.append('phone', updatedValues.Phone);\n    updatedData.append('birthday', updatedValues.Birthday);\n    updatedData.append('city', updatedValues.City);\n    dispatch(updateUser(updatedData));\n    // const namery = updatedData.get(\"name\")\n  };\n\n  // const handleLogout = () => {\n  //   toggleModal();\n  //   dispatch(logout());\n  // };\n\n  const renderField = name => {\n    const isActive = activeInput === name;\n    const isEditing = isActive && activeInput !== null;\n\n    return (\n      <Label key={name}>\n        {name}:\n        <Field name={name}>\n          {({ field }) => (\n            <Input\n              type=\"text\"\n              {...field}\n              readOnly={!isActive}\n              className={isEditing ? 'editing' : ''}\n              onChange={e => {\n                field.onChange(e);\n                handleFieldChange(name, e.target.value);\n              }}\n            />\n          )}\n        </Field>\n        {isActive ? (\n          <BoxIconVerify>\n            <IconVerify\n              onClick={() => {\n                handleFormSubmit(formValues);\n                setActiveInput(null);\n              }}\n            />\n          </BoxIconVerify>\n        ) : (\n          <IconEdit onClick={() => handleFieldChange(name)} />\n        )}\n      </Label>\n    );\n  };\n\n  return (\n    <Container>\n      <Title>My information:</Title>\n\n      <Box>\n        <EditPhoto />\n\n        <Formik\n          initialValues={formValues}\n          onSubmit={handleFormSubmit}\n          validationSchema={validationSchema}\n        >\n          <Form>\n            {Object.keys(formValues).map(field => renderField(field))}\n\n            <LogOut>\n              <BtnLogOut type=\"button\" onClick={toggleModal}>\n                <IconLogOut />\n                Log Out\n              </BtnLogOut>\n              {/* <LogoutModal\n                isOpen={isOpen}\n                toggleModal={toggleModal}\n                onLogout={handleLogout}\n              /> */}\n            </LogOut>\n          </Form>\n        </Formik>\n      </Box>\n    </Container>\n  );\n};\n\nexport default UserData;\n","export const selectPetsInfo = state => state.pets.petsInfo;\n\nexport const selectIsLoading = state => state.pets.isLoading;\n\nexport const selectError = state => state.pets.error;\n\nconst petSelectors = {\n  selectPetsInfo,\n  selectIsLoading,\n  selectError,\n};\n\nexport default petSelectors;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n// import { Typography } from '@mui/material';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 703px;\n    margin: 0 0 40px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: inline-flex;\n\n    width: 821px;\n    margin: 35px 0 0 0;\n  }\n`;\n\nexport const Title = styled.p`\n  color: black;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Button = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 40px;\n  font-family: 'Manrope', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n  align-items: center;\n  letter-spacing: 0.04em;\n  gap: 15px;\n  cursor: pointer;\n  border: none;\n  box-sizing: border-box;\n  color: #fef9f9;\n  background: #54adff;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  &:hover {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n`;\n","import styled from '@emotion/styled';\n\n export const Container = styled.div`\n   width: 280px;\n   @media screen and (min-width: 768px) {\n     width: 703px;\n   }\n   @media screen and (min-width: 1280px) {\n     width: 821px;\n   }\n `;\n\n export const List = styled.ul`\n   padding: 0;\n   margin: 0;\n `;\n\n export const ListItem = styled.li`\n   box-shadow: 3px 8px 8px rgba(136, 198, 253, 0.19);\n   background-color: #ffffff;\n   border-radius: 20px;\n   padding: 16px 20px 40px;\n   @media screen and (min-width: 748px) {\n     border-radius: 40px;\n     display: flex;\n     gap: 20px;\n     padding: 20px;\n   }\n   :not(:first-of-type) {\n     margin-top: 20px;\n   }\n `;\n\n export const Image = styled.img`\n   display: block;\n   width: 240px;\n   height: 240px;\n   border-radius: 20px;\n   object-fit: cover;\n   @media screen and (min-width: 748px) and (max-width: 1279.98px) {\n     width: 128px;\n     height: 128px;\n   }\n   @media screen and (min-width: 1280px) {\n     width: 161px;\n     height: 161px;\n   }\n `;\n\n export const Description = styled.p`\n   font-size: 14px;\n   line-height: 1.57;\n   margin: 0;\n   margin-top: 12px;\n   @media screen and (min-width: 748px) {\n     font-size: 16px;\n     :first-of-type {\n       margin-top: 0;\n     }\n     :not(:first-of-type) {\n       margin-top: 16px;\n     }\n   }\n `;\n\n export const Highlight = styled.span`\n   font-weight: 700;\n `;\n\n export const Button = styled.button`\n   position: absolute;\n   top: 0;\n   right: 0;\n   border: none;\n   background-color: transparent;\n   cursor: pointer;\n   color: #54adff;\n `;\n","import { useDispatch } from 'react-redux';\n import { deletePet } from 'redux/pets/operations';\n import DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\n import { Image, Description, Highlight, Button } from './UserPetsList.styled';\n import Box from '@mui/material/Box';\n\n export const UserPetItem = ({ pet }) => {\n   const dispatch = useDispatch();\n\n   return (\n     <>\n       <div>\n         <Image src={pet.imgURL} alt=\"pet description\" />\n       </div>\n       <Box\n         sx={{\n           position: 'relative',\n           width: '100%',\n         }}\n       >\n         <Description>\n           <Highlight>Name:</Highlight> {pet.name}\n         </Description>\n\n         <Button type=\"button\" onClick={() => dispatch(deletePet(pet._id))}>\n           <DeleteOutlinedIcon size=\"42\" />\n         </Button>\n\n         <Description>\n           <Highlight>Date of birth:</Highlight> {pet.dateOfBirth}\n         </Description>\n         <Description>\n           <Highlight>Breed:</Highlight> {pet.breed}\n         </Description>\n         <Description>\n           <Highlight>Comments:</Highlight> {pet.comments}\n         </Description>\n       </Box>\n     </>\n   );\n };\n\n export default UserPetItem;\n","import { List, ListItem } from './UserPetsList.styled';\n import UserPetItem from './UserPetItem';\n\n export const UserPetsList = ({ pets }) => {\n   return (\n     <List>\n       {pets &&\n         pets.map(pet => (\n           <ListItem key={pet._id}>\n             <UserPetItem pet={pet} />\n           </ListItem>\n         ))}\n     </List>\n   );\n };\n\n export default UserPetsList;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-family: 'Manrope', 'Helvetica', 'Arial', sans-serif;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Notification = styled.div`\n  border-radius: 20px;\n  padding: 25px;\n  box-shadow: 3px 8px 8px rgba(136, 198, 253, 0.19);\n  width: 280px;\n  background-color: #ffffff;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    width: 703px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 821px;\n  }\n`;\n","import { Notification, Text } from './NotFound.styled';\n\nconst NotFound = () => {\n  return (\n    <>\n      <Notification>\n        <Text>You have not added any pets </Text>\n      </Notification>\n    </>\n  );\n};\n\nexport default NotFound;\n","import { useSelector } from 'react-redux';\nimport { selectPetsInfo, selectIsLoading } from 'redux/pets/selectors';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport { Container, Title, Button, TitleContainer } from './UserPetsData.styled';\n\nimport UserPetsList from 'components/UserPetsData/UserPetsList/UserPetsList';\nimport NotFound from './NotFound';\n\nconst UserPetsData = () => {\n  const petsInfo = useSelector(selectPetsInfo);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Container>\n      <TitleContainer>\n        <Title>My pets:</Title>\n        <Button to=\"/add-pet\">\n          Add pet <AddIcon />\n        </Button>\n      </TitleContainer>\n\n      {!isLoading && !petsInfo.length > 0 ? (\n        <NotFound />\n      ) : (\n        <UserPetsList pets={petsInfo} />\n      )}\n    </Container>\n  );\n};\n\nexport default UserPetsData;\n","import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { fetchPets } from 'redux/pets/operations';\n// import { hideModalSuccessRegister } from 'redux/auth/operations';\n// import { useSelector } from 'react-redux';\n\nimport UserData from 'components/UserData';\nimport UserPetsData from 'components/UserPetsData/UserPetsData';\n// import useModal from 'hooks/useModal';\n// import { selectModalSuccessRegister } from 'redux/auth/selectors';\n// import CongratsModal from 'components/Modal/CongratsModal';\n// import { useAuth } from 'hooks';\n\nconst UserPage = () => {\n  // const dispatch = useDispatch();\n  // const successRegister = useSelector(selectModalSuccessRegister);\n  // const [  setIsOpen] = useModal();\n  // toggleModal,\n  // isOpen,\n\n//   const {user, isLoggedIn, isRefreshing, token} = useAuth()\n// console.log(\"user\", user)\n// console.log(\"isLoggedIn\", isLoggedIn)\n// console.log(\"isRefreshing\", isRefreshing)\n// console.log(\"token\", token)\n\n  useEffect(() => {\n    document.title = 'YourPet | User';\n  });\n\n  // useEffect(() => {\n  //   setIsOpen(true);\n  //   dispatch(fetchPets());\n  // }, [dispatch, setIsOpen]);\n\n  // const onModalToggle = () => {\n  //   dispatch(hideModalSuccessRegister());\n  //   toggleModal();\n  // };\n  return (\n    <>\n      {/* {successRegister && (\n        <CongratsModal isOpen={isOpen} toggleModal={onModalToggle} />\n      )} */}\n      <UserData />\n      <UserPetsData />\n    </>\n  );\n};\n\nexport default UserPage;\n"],"names":["useState","require","_useState","_useState2","_slicedToArray","isOpen","setIsOpen","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Box","_templateObject3","PictureBox","_templateObject4","PictureWrapper","_templateObject5","Picture","_templateObject6","EditPicture","_templateObject7","EditBtnPicture","_templateObject8","IconWrapperVerify","_templateObject9","IconWrapperRefuse","_templateObject10","Label","_templateObject11","Input","Field","_templateObject12","LogOut","_templateObject13","BtnLogOut","_templateObject14","IconLogOut","CiLogout","_templateObject15","Camera","BsCamera","_templateObject16","IconEdit","CiEdit","_templateObject17","BoxIconVerify","_templateObject18","IconVerify","AiOutlineCheck","_templateObject19","IconRefuse","RxCross1","_templateObject20","selectedFile","setSelectedFile","_useState3","_useState4","isEditingPhoto","setIsEditingPhoto","fileInputRef","useRef","dispatch","useDispatch","avatarURL","useSelector","selectUser","handleConfirmPhoto","updatedData","FormData","append","name","updateAvatars","_jsxs","children","_jsx","src","URL","createObjectURL","alt","onClick","current","click","ref","type","style","display","onChange","event","file","target","files","_Fragment","validationSchema","yup","shape","Name","min","max","Email","email","Phone","Birthday","City","_useSelector","initialValues","phone","birthday","city","activeInput","setActiveInput","formValues","setFormValues","_useModal","useModal","toggleModal","handleFieldChange","fieldName","fieldValue","prevValues","_objectSpread","_defineProperty","handleFormSubmit","values","updatedValues","Object","some","value","undefined","updateUser","EditPhoto","Formik","onSubmit","Form","keys","map","field","isActive","isEditing","_ref","readOnly","className","e","renderField","selectPetsInfo","state","pets","petsInfo","selectIsLoading","isLoading","TitleContainer","Button","NavLink","List","ListItem","Image","Description","Highlight","pet","imgURL","sx","position","width","deletePet","_id","DeleteOutlinedIcon","size","dateOfBirth","breed","comments","UserPetItem","Text","Notification","to","AddIcon","length","NotFound","UserPetsList","useEffect","document","title","UserData","UserPetsData"],"sourceRoot":""}