{"version":3,"file":"static/js/211.7dd15e71.chunk.js","mappings":"oXAAaA,EACK,iBADLA,GAEM,a,qDCMNC,IAAaC,EAAAA,GAAAA,GAAOC,GAAAA,EAAPD,CAAcE,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,kdAyB3BC,IAAaJ,EAAAA,GAAAA,GAAOC,GAAAA,EAAPD,CAAcK,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,kOAe3BG,GAAYN,GAAAA,EAAAA,IAAUO,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,yQAgBtBK,GAAQR,GAAAA,EAAAA,EAAQS,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,0JAUhBO,GAAMV,GAAAA,EAAAA,IAAUW,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,qhBA4BhBS,GAAaZ,GAAAA,EAAAA,IAAUa,IAAAA,GAAAV,EAAAA,GAAAA,GAAA,uDAKvBW,GAAiBd,GAAAA,EAAAA,IAAUe,IAAAA,GAAAZ,EAAAA,GAAAA,GAAA,gFAM3Ba,GAAUhB,GAAAA,EAAAA,IAAUiB,IAAAA,GAAAd,EAAAA,GAAAA,GAAA,4IASpBe,GAAclB,GAAAA,EAAAA,IAAUmB,IAAAA,GAAAhB,EAAAA,GAAAA,GAAA,oFAQxBiB,GAAiBpB,GAAAA,EAAAA,OAAaqB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,sPAiB9BmB,GAAoBtB,GAAAA,EAAAA,IAAUuB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,0EAM9BqB,GAAoBxB,GAAAA,EAAAA,IAAUyB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,yEAM9BuB,GAAQ1B,GAAAA,EAAAA,MAAY2B,IAAAA,GAAAxB,EAAAA,GAAAA,GAAA,8VAqBpByB,IAAQ5B,EAAAA,GAAAA,GAAO6B,EAAAA,GAAP7B,CAAa8B,IAAAA,GAAA3B,EAAAA,GAAAA,GAAA,kbA2BrB4B,GAAS/B,GAAAA,EAAAA,IAAUgC,IAAAA,GAAA7B,EAAAA,GAAAA,GAAA,qIASnB8B,GAAYjC,GAAAA,EAAAA,OAAakC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,yMAczBgC,IAAanC,EAAAA,GAAAA,GAAOoC,EAAAA,IAAPpC,CAAgBqC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,0EAO7BmC,IAAStC,EAAAA,GAAAA,GAAOuC,GAAAA,IAAPvC,CAAgBwC,IAAAA,GAAArC,EAAAA,GAAAA,GAAA,wEAwBzBsC,KAlBWzC,EAAAA,GAAAA,GAAO0C,EAAAA,IAAP1C,CAAc2C,IAAAA,GAAAxC,EAAAA,GAAAA,GAAA,uOAkBTH,GAAAA,EAAAA,IAAU4C,IAAAA,GAAAzC,EAAAA,GAAAA,GAAA,6JAW1B0C,IAAa7C,EAAAA,GAAAA,GAAO8C,GAAAA,IAAP9C,CAAsB+C,IAAAA,GAAA5C,EAAAA,GAAAA,GAAA,8IAWnC6C,IAAahD,EAAAA,GAAAA,GAAOiD,EAAAA,IAAPjD,CAAgBkD,IAAAA,GAAA/C,EAAAA,GAAAA,GAAA,uE,UC7K1C,GAvFkB,SAAHgD,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAA1BF,UAYFG,EAAqB,WACzB,GAAKb,EAAL,CAIAK,GAAkB,GAElB,IAAMS,EAAc,IAAIC,SACxBD,EAAYE,OAAO,SAAUhB,EAAcA,EAAaiB,MACxDT,GAASU,EAAAA,EAAAA,IAAcJ,GANvB,CAOF,EAeA,OACEK,EAAAA,GAAAA,MAAChE,GAAU,CAAAiE,SAAA,EACTC,EAAAA,GAAAA,KAAChE,GAAc,CAAA+D,SACZpB,GACCqB,EAAAA,GAAAA,KAAC9D,GAAO,CAAC+D,IAAKC,IAAIC,gBAAgBxB,GAAeyB,IAAI,WAErDJ,EAAAA,GAAAA,KAAC9D,GAAO,CAAC+D,IAAKZ,G,6qIAA4Be,IAAI,YAIlDJ,EAAAA,GAAAA,KAAC5D,GAAW,CAAA2D,UACVD,EAAAA,GAAAA,MAACxD,GAAc,CAAC+D,QAnBI,WACpBtB,EACFS,KAvBFR,GAAkB,GAClBC,EAAaqB,QAAQC,QA0BvB,EAaiDR,SAAA,EACzCC,EAAAA,GAAAA,KAAA,SACEQ,IAAKvB,EACLwB,KAAK,OACLC,MAAO,CAAEC,QAAS,QAClBC,SAnDe,SAAAC,GACvB,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChCpC,EAAgBkC,EAClB,IAkDSxC,IAAatD,KACZgF,EAAAA,GAAAA,KAAAiB,GAAAA,SAAA,CAAAlB,SACGhB,GACCe,EAAAA,GAAAA,MAAAmB,GAAAA,SAAA,CAAAlB,SAAA,EACEC,EAAAA,GAAAA,KAACxD,GAAiB,CAAAuD,UAChBC,EAAAA,GAAAA,KAACjC,GAAU,CAACsC,QAASb,OAEvBQ,EAAAA,GAAAA,KAAA,QAAAD,SAAM,aACNC,EAAAA,GAAAA,KAACtD,GAAiB,CAAAqD,UAChBC,EAAAA,GAAAA,KAAC9B,GAAU,CAACmC,QAxCJ,WACxBrB,GAAkB,GAClBJ,EAAgB,KAClB,UAyCckB,EAAAA,GAAAA,MAAAmB,GAAAA,SAAA,CAAAlB,SAAA,EACEC,EAAAA,GAAAA,KAACxC,GAAM,KACPwC,EAAAA,GAAAA,KAAA,QAAAD,SAAM,2BASxB,E,sBC1GamB,GAAoBhG,GAAAA,EAAAA,IAAUE,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,4PAgB9B8F,GAAejG,GAAAA,EAAAA,EAAQK,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,yMAYvB+F,GAAgBlG,GAAAA,EAAAA,GAASO,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,yMAYzBgG,GAAgBnG,GAAAA,EAAAA,OAAaS,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,smBCb1C,GArBsB,SAAHgD,GAAwB,IAAlBiD,EAAUjD,EAAViD,WACjBC,EAAc,WAClBD,IACAE,aAAaC,QAAQ,6BAA8B,OACrD,EAEA,OACE3B,EAAAA,GAAAA,MAACoB,GAAiB,CAACI,WAAYC,EAAYxB,SAAA,EACzCC,EAAAA,GAAAA,KAACoB,GAAa,CAAArB,SAAC,eACfC,EAAAA,GAAAA,KAACmB,GAAY,CAAApB,SAAC,kCACdC,EAAAA,GAAAA,KAACqB,GAAa,CACZhB,QAASkB,EACTG,UAAU,MACVjB,KAAK,SACLkB,MAAM,OACNC,MAAM,YAId,ECCMC,GAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,GAAW,gBAAgBG,IAAI,GAAGC,IAAI,IAC5CC,MAAOL,EAAAA,KAAaM,MAAM,iBAC1BC,MAAOP,EAAAA,KACPQ,SAAUR,EAAAA,KACVS,KAAMT,EAAAA,OAuKR,GApKiB,WACf,IAAM3C,GAAWC,EAAAA,EAAAA,MACjBoD,GAA+ClD,EAAAA,EAAAA,IAAYC,EAAAA,IAAnDK,EAAI4C,EAAJ5C,KAAMwC,EAAKI,EAALJ,MAAOK,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAUC,EAAIH,EAAJG,KACtCpE,GAAgCC,EAAAA,EAAAA,UAASxD,GAAuByD,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDD,EAAQG,EAAA,GAAEmE,EAAWnE,EAAA,GAC5BI,GAAsCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CgE,EAAW/D,EAAA,GAAEgE,EAAchE,EAAA,GAClCiE,GAAsCvE,EAAAA,EAAAA,WAAS,GAAMwE,GAAAtE,EAAAA,EAAAA,GAAAqE,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsD3E,EAAAA,EAAAA,YAAU4E,GAAA1E,EAAAA,EAAAA,GAAAyE,EAAA,GAAzDE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,IAElDG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAA6BhC,aAAaiC,QAC9C,8BAEFH,GAAwBI,KAAKC,MAAMH,GACrC,GAAG,IAEH,IAAMI,EAAgB,CACpB5B,KAAMpC,GAAQ,OACduC,MAAOC,GAAS,oBAChBC,MAAOI,GAAS,eAChBH,SAAUI,GAAY,aACtBH,KAAMI,GAAQ,QAEhBkB,GAAoCrF,EAAAA,EAAAA,UAASoF,GAAcE,GAAApF,EAAAA,EAAAA,GAAAmF,EAAA,GAApDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAiB,SAAAC,GACrBtB,EAAYsB,EACd,EAiCMC,EAAc,SAACvE,EAAMwE,GACzB,IACMC,EADWxB,IAAgBjD,GACa,OAAhBiD,EAE9B,OACE/C,EAAAA,GAAAA,MAAAmB,GAAAA,SAAA,CAAAlB,SAAA,EACED,EAAAA,GAAAA,MAAClD,GAAK,CAAAmD,SAAA,CACHH,EAAK,KACNI,EAAAA,GAAAA,KAACjD,EAAAA,GAAK,CAAC6C,KAAMA,EAAKG,SACf,SAAA1B,GAAA,IAAGiG,EAAKjG,EAALiG,MAAK,OACPtE,EAAAA,GAAAA,KAAClD,IAAKyH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJ9D,KAAK,QACD6D,GAAK,IACTE,SAAUlG,IAAatD,EACvB0G,UAAW2C,EAAY,UAAY,GACnCzD,SAAU,SAAA6D,GA9CE,IAACC,EAAWC,EA+CtBL,EAAM1D,SAAS6D,GA/CJC,EAgDO9E,EAhDI+E,EAgDEF,EAAE1D,OAAOmD,MA/C/CpB,EAAe4B,GACfV,GAAc,SAAAY,GAAU,OAAAL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBK,GAAU,IAAAC,EAAAA,EAAAA,GAAA,GACZH,EAAYC,GAAU,GA6Cb,IACA,MAbI/E,IAiBZI,EAAAA,GAAAA,KAAA,KAAGU,MAAO,CAAEiB,MAAO,MAAOmD,SAAU,QAAS/E,SAC1CqE,GAAUA,EAAOxE,OAI1B,EAEA,OACEE,EAAAA,GAAAA,MAACtE,GAAS,CAAAuE,SAAA,EACRC,EAAAA,GAAAA,KAACtE,GAAK,CAAAqE,SAAC,qBAEPD,EAAAA,GAAAA,MAAClE,GAAG,CAAAmE,SAAA,EACFC,EAAAA,GAAAA,KAAC+E,GAAS,CAACzG,SAAUA,KACrB0B,EAAAA,GAAAA,KAACgF,EAAAA,GAAM,CACLC,GAAI,CAAEC,SAAU,YAChBtB,cAAeG,EACfoB,SA9DiB,SAAAC,GACvB,IAAMC,GAAad,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdR,GACAqB,GAOL,IAJuBE,OAAOF,OAAOC,GAAeE,MAClD,SAAArB,GAAK,YAAcsB,IAAVtB,GAAiC,KAAVA,CAAY,IAG9C,CAIA,IAAMzE,EAAc,IAAIC,SACxBD,EAAYE,OAAO,OAAQ0F,EAAcrD,MACzCvC,EAAYE,OAAO,QAAS0F,EAAclD,OAC1C1C,EAAYE,OAAO,QAAS0F,EAAchD,OAC1C5C,EAAYE,OAAO,WAAY0F,EAAc/C,UAC7C7C,EAAYE,OAAO,OAAQ0F,EAAc9C,MACzCpD,GAASsG,EAAAA,EAAAA,IAAWhG,GARpB,CASF,EA0CQoC,iBAAkBA,GAAiB9B,SAElC,SAAA2F,GAAA,IAAGtB,EAAMsB,EAANtB,OAAM,OACRtE,EAAAA,GAAAA,MAAC6F,EAAAA,GAAI,CAAA5F,SAAA,EACHC,EAAAA,GAAAA,KAAC1E,GAAU,CAACsK,QAAQ,OAAM7F,SACvBzB,IAAatD,GACZgF,EAAAA,GAAAA,KAACpC,EAAAA,IAAM,CACLyC,QAAS,kBAAM4D,EAAejJ,GAAwB,KAGxDgF,EAAAA,GAAAA,KAAC7B,EAAAA,IAAQ,CACPkC,QAAS,kBAAM4D,EAAejJ,EAAuB,MAK1DsK,OAAOO,KAAK9B,GAAY+B,KAAI,SAAAxB,GAAK,OAAIH,EAAYG,EAAOF,EAAO,KAEhEtE,EAAAA,GAAAA,MAAC7C,GAAM,CAAA8C,SAAA,CACJzB,IAAatD,IACZ8E,EAAAA,GAAAA,MAAC3C,GAAS,CAACsD,KAAK,SAASJ,QAAS,kBAAM6C,GAAe,EAAK,EAACnD,SAAA,CAAC,WAE5DC,EAAAA,GAAAA,KAAC3C,GAAU,OAGdiB,IAAatD,KACZgF,EAAAA,GAAAA,KAACrC,GAAa,CAAAoC,UACZC,EAAAA,GAAAA,KAAC/E,GAAU,CACT2K,QAAQ,YACRnF,KAAK,SACLiB,UAAU,gBACVhB,MAAO,CACLqF,gBAAiB,WACjBhG,SACH,YAKLC,EAAAA,GAAAA,KAACgG,GAAAA,EAAc,CAACC,OAAQhD,EAAaiD,UAAWhD,EAAenD,UAC7DC,EAAAA,GAAAA,KAACmG,GAAAA,EAAkB,CACjBC,WAAY,WACVlD,GAAe,EACjB,WAID,QAIblD,EAAAA,GAAAA,KAACgG,GAAAA,EAAc,CACbC,OAAQ5C,EACR6C,UAAW5C,EAAuBvD,UAElCC,EAAAA,GAAAA,KAACqG,GAAa,CACZ/E,WAAY,WACVgC,GAAuB,EACzB,QAKV,ECtMagD,GAAiB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,QAAS,EAE9CC,GAAkB,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,SAAU,E,sBCEhDnL,GAAYN,GAAAA,EAAAA,IAAUE,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,+QAiBtBK,GAAQR,GAAAA,EAAAA,EAAQK,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,sIAShBuL,GAAiB1L,GAAAA,EAAAA,IAAUO,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,kNAW3BF,IAASD,EAAAA,GAAAA,GAAO2L,GAAAA,GAAP3L,CAAeS,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,mgBC7BxByL,IAVY5L,GAAAA,EAAAA,IAAUE,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,gKAUfH,GAAAA,EAAAA,GAASK,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,wCAKhB0L,GAAW7L,GAAAA,EAAAA,GAASO,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,yUAgBpB2L,GAAQ9L,GAAAA,EAAAA,IAAUS,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,sTAgBlB4L,GAAc/L,GAAAA,EAAAA,EAAQW,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,2QAgBtB6L,GAAYhM,GAAAA,EAAAA,KAAWa,IAAAA,GAAAV,EAAAA,GAAAA,GAAA,+BAIvBF,GAASD,GAAAA,EAAAA,OAAae,IAAAA,GAAAZ,EAAAA,GAAAA,GAAA,mJ,gCC1BnC,GApC2B,SAAHgD,GAAiB,IAAX8I,EAAG9I,EAAH8I,IACtBhI,GAAWC,EAAAA,EAAAA,MAEjB,OACEU,EAAAA,GAAAA,MAAAmB,GAAAA,SAAA,CAAAlB,SAAA,EACEC,EAAAA,GAAAA,KAAA,OAAAD,UACEC,EAAAA,GAAAA,KAACgH,GAAK,CAAC/G,IAAKkH,EAAIC,SAAUhH,IAAI,uBAEhCN,EAAAA,GAAAA,MAAClE,GAAAA,EAAG,CACFqJ,GAAI,CACFC,SAAU,WACVtD,MAAO,QACP7B,SAAA,EAEFD,EAAAA,GAAAA,MAACmH,GAAW,CAAAlH,SAAA,EACVC,EAAAA,GAAAA,KAACkH,GAAS,CAAAnH,SAAC,UAAiB,IAAEoH,EAAIvH,SAGpCI,EAAAA,GAAAA,KAAC7E,GAAM,CAACsF,KAAK,SAASJ,QAAS,kBAAMlB,GAASkI,EAAAA,GAAAA,IAAUF,EAAIG,KAAK,EAACvH,UAChEC,EAAAA,GAAAA,KAACuH,GAAAA,EAAkB,CAACC,KAAK,UAG3B1H,EAAAA,GAAAA,MAACmH,GAAW,CAAAlH,SAAA,EACVC,EAAAA,GAAAA,KAACkH,GAAS,CAAAnH,SAAC,mBAA0B,IAAEoH,EAAIM,SAE7C3H,EAAAA,GAAAA,MAACmH,GAAW,CAAAlH,SAAA,EACVC,EAAAA,GAAAA,KAACkH,GAAS,CAAAnH,SAAC,WAAkB,IAAEoH,EAAI1G,SAErCX,EAAAA,GAAAA,MAACmH,GAAW,CAAAlH,SAAA,EACVC,EAAAA,GAAAA,KAACkH,GAAS,CAAAnH,SAAC,cAAqB,IAAEoH,EAAIO,gBAKhD,ECzBA,GAb4B,SAAHrJ,GAAkB,IAAZmI,EAAInI,EAAJmI,KAC7B,OACExG,EAAAA,GAAAA,KAAC8G,GAAI,CAAA/G,SACFyG,EAAKmB,OAAS,GACbnB,EAAKV,KAAI,SAAAqB,GAAG,OACVnH,EAAAA,GAAAA,KAAC+G,GAAQ,CAAAhH,UACPC,EAAAA,GAAAA,KAAC4H,GAAW,CAACT,IAAKA,KADLA,EAAIG,IAER,KAIrB,ECZaO,GAAO3M,GAAAA,EAAAA,EAAQE,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,kKASfyM,GAAe5M,GAAAA,EAAAA,IAAUK,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,qTCCtC,GAViB,WACf,OACE2E,EAAAA,GAAAA,KAAAiB,GAAAA,SAAA,CAAAlB,UACEC,EAAAA,GAAAA,KAAC8H,GAAY,CAAA/H,UACXC,EAAAA,GAAAA,KAAC6H,GAAI,CAAA9H,SAAC,oCAId,EC+BA,GA3BqB,WACnB,IAAM0G,GAAWnH,EAAAA,EAAAA,IAAYgH,IACvBK,GAAYrH,EAAAA,EAAAA,IAAYoH,IACxBvH,GAAWC,EAAAA,EAAAA,MAMjB,OAJAmE,EAAAA,EAAAA,YAAU,WACRpE,GAAS4I,EAAAA,GAAAA,OAAaC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACzD,GAAG,CAAC9I,KAGFW,EAAAA,GAAAA,MAACtE,GAAS,CAAAuE,SAAA,EACRD,EAAAA,GAAAA,MAAC8G,GAAc,CAAA7G,SAAA,EACbC,EAAAA,GAAAA,KAACtE,GAAK,CAAAqE,SAAC,cACPD,EAAAA,GAAAA,MAAC3E,GAAM,CAACiN,GAAG,WAAUrI,SAAA,CAAC,YACZC,EAAAA,GAAAA,KAACqI,GAAAA,EAAO,WAIlB1B,IAAcF,EAASkB,OAAS,GAChC3H,EAAAA,GAAAA,KAACsI,GAAQ,KAETtI,EAAAA,GAAAA,KAACuI,GAAY,CAAC/B,KAAMC,MAI5B,EC3BA,GATiB,WACf,OACE3G,EAAAA,GAAAA,MAAAmB,GAAAA,SAAA,CAAAlB,SAAA,EACEC,EAAAA,GAAAA,KAACwI,GAAQ,KACTxI,EAAAA,GAAAA,KAACyI,GAAY,MAGnB,C","sources":["components/UserData/constants.js","components/UserData/UserData.styled.jsx","components/UserData/EditPhoto.jsx","components/Modals/ModalCongrats/ModalCongrats.styled.jsx","components/Modals/ModalCongrats/ModalCongrats.jsx","components/UserData/UserData.jsx","redux/pets/selectors.js","components/UserPetsData/UserPetsData.styled.jsx","components/UserPetsData/UserPetsList/UserPetsList.styled.jsx","components/UserPetsData/UserPetsList/UserPetItem.jsx","components/UserPetsData/UserPetsList/UserPetsList.jsx","components/UserPetsData/NotFound.styled.jsx","components/UserPetsData/NotFound.jsx","components/UserPetsData/UserPetsData.jsx","pages/UserPage.jsx"],"sourcesContent":["export const EDIT_MODE = {\n    defaultValue: 'isOnlyReadMode',\n    editModeValue: 'isEditMode'\n}\n","import styled from '@emotion/styled';\nimport { CiEdit, CiLogout } from 'react-icons/ci';\nimport { BsCamera } from 'react-icons/bs';\nimport { RxCross1 } from 'react-icons/rx';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { Field } from 'formik';\nimport { Button } from '@mui/material';\n\nexport const ButtonSave = styled(Button)`\n  && {\n    background-color: #54adff;\n    color: white;\n    border-radius: 40px;\n    width: 255px;\n    cursor: pointer;\n    padding: 6px 108px;\n    position: absolute;\n    bottom: -29px;\n    right: -15px;\n\n    \n      @media screen and (min-width: 768px) {\n        background-color: green;\n        right: 262px;\n      }\n\n      @media screen and (min-width: 1280px) {\n        background-color: green;\n        right: -15px;\n      }\n    \n`;\n\nexport const ButtonEdit = styled(Button)`\n  position: absolute;\n  right: 1px;\n  top: 10px;\n\n  @media screen and (min-width: 768px) {\n    right: 1px;\n    top: 10px;\n  }\n  @media screen and (min-width: 1280px) {\n    right: 15px;\n    top: 10px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0 40px 0;\n\n  @media screen and (min-width: 768px) {\n    margin: 35px 0 40px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: inline-flex;\n\n    margin: 35px 32px 0 0;\n  }\n`;\n\nexport const Title = styled.p`\n  color: black;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  font-size: 28px;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  height: 517px;\n  padding: 20px 8px 20px 8px;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n  background-color: #fff;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap-reverse;\n\n    width: 704px;\n    height: 278px;\n    padding: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    height: 520px;\n\n    padding: 20px 17px 0 17px;\n  }\n`;\n\nexport const PictureBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const PictureWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const Picture = styled.img`\n  display: block;\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  background-color: #ebebeb;\n  object-fit: cover;\n`;\n\nexport const EditPicture = styled.div`\n  display: flex;\n\n  justify-content: center;\n\n  margin-bottom: 25px;\n`;\n\nexport const EditBtnPicture = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 120px;\n  height: 25px;\n\n  border: none;\n  background-color: #fff;\n  padding: 0;\n\n  cursor: pointer;\n  font-size: 12px;\n  letter-spacing: 0.04em;\n`;\n\nexport const IconWrapperVerify = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 5px;\n`;\n\nexport const IconWrapperRefuse = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n\n  font-weight: 600;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    width: 355px;\n\n    font-weight: 600;\n    font-size: 18px;\n    letter-spacing: 0.04em;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 190px;\n  height: 28px;\n\n  padding: 0 40px 0 15px;\n  border: 1px solid #54adff;\n  border-radius: 20px;\n  outline: none;\n  background-color: #fff;\n\n  font-size: 12px;\n  letter-spacing: 0.04em;\n  color: #000000;\n\n  &.editing {\n    border: 1px solid #20e820;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 255px;\n    height: 32px;\n\n    font-size: 16px;\n    letter-spacing: 0.04em;\n  }\n`;\n\nexport const LogOut = styled.div`\n  margin-top: 25px;\n  display: flex;\n  gap: 10px;\n  @media screen and (min-width: 768px) {\n    margin-top: 15px;\n  }\n`;\n\nexport const BtnLogOut = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: none;\n  background-color: #fff;\n  padding: 0;\n\n  cursor: pointer;\n  color: #888888;\n  font-size: 16px;\n  letter-spacing: 0.04em;\n`;\n\nexport const IconLogOut = styled(CiLogout)`\n  margin-right: 10px;\n\n  color: #54adff;\n  font-size: 25px;\n`;\n\nexport const Camera = styled(BsCamera)`\n  margin-right: 10px;\n  color: #54adff;\n  font-size: 18px;\n`;\n\nexport const IconEdit = styled(CiEdit)`\n  position: absolute;\n  left: 88%;\n\n  font-size: 20px;\n  cursor: pointer;\n  color: #54adff;\n\n  @media screen and (min-width: 768px) {\n    left: 90%;\n    font-size: 23px;\n  }\n\n  :hover {\n    color: red;\n  }\n`;\n\nexport const BoxIconVerify = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  left: 89%;\n\n  @media screen and (min-width: 768px) {\n    left: 90.5%;\n  }\n`;\n\nexport const IconVerify = styled(AiOutlineCheck)`\n  font-size: 18px;\n\n  cursor: pointer;\n  color: #20e820;\n\n  @media screen and (min-width: 768px) {\n    font-size: 21px;\n  }\n`;\n\nexport const IconRefuse = styled(RxCross1)`\n  font-size: 18px;\n\n  cursor: pointer;\n  color: #e82d20;\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatars } from '../../redux/auth/operations ';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\n\nimport avatarDefault from 'images/Avatar/avatarDefault.png';\n\nimport { EDIT_MODE } from './constants';\n\nimport {\n  PictureBox,\n  PictureWrapper,\n  EditPicture,\n  EditBtnPicture,\n  IconWrapperVerify,\n  IconWrapperRefuse,\n  Picture,\n  Camera,\n  IconVerify,\n  IconRefuse,\n} from './UserData.styled';\n\nconst EditPhoto = ({ editMode }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditingPhoto, setIsEditingPhoto] = useState(false);\n\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const { avatarURL } = useSelector(selectUser);\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleEditPhoto = () => {\n    setIsEditingPhoto(true);\n    fileInputRef.current.click();\n  };\n\n  const handleConfirmPhoto = () => {\n    if (!selectedFile) {\n      return;\n    }\n\n    setIsEditingPhoto(false);\n\n    const updatedData = new FormData();\n    updatedData.append('avatar', selectedFile, selectedFile.name);\n    dispatch(updateAvatars(updatedData));\n  };\n\n  const handleCancelPhoto = () => {\n    setIsEditingPhoto(false);\n    setSelectedFile(null);\n  };\n\n  const handleButtonClick = () => {\n    if (isEditingPhoto) {\n      handleConfirmPhoto();\n    } else {\n      handleEditPhoto();\n    }\n  };\n\n  return (\n    <PictureBox>\n      <PictureWrapper>\n        {selectedFile ? (\n          <Picture src={URL.createObjectURL(selectedFile)} alt=\"Photo\" />\n        ) : (\n          <Picture src={avatarURL || avatarDefault} alt=\"User\" />\n        )}\n      </PictureWrapper>\n\n      <EditPicture>\n        <EditBtnPicture onClick={handleButtonClick}>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            style={{ display: 'none' }}\n            onChange={handleFileChange}\n          />\n          {editMode === EDIT_MODE.editModeValue && (\n            <>\n              {isEditingPhoto ? (\n                <>\n                  <IconWrapperVerify>\n                    <IconVerify onClick={handleConfirmPhoto} />\n                  </IconWrapperVerify>\n                  <span>Confirm</span>\n                  <IconWrapperRefuse>\n                    <IconRefuse onClick={handleCancelPhoto} />\n                  </IconWrapperRefuse>\n                </>\n              ) : (\n                <>\n                  <Camera />\n                  <span>Edit photo</span>\n                </>\n              )}\n            </>\n          )}\n        </EditBtnPicture>\n      </EditPicture>\n    </PictureBox>\n  );\n};\n\nexport default EditPhoto;\n","import styled from '@emotion/styled';\n\nexport const CongratsContainer = styled.div`\n  width: 256px;\n  height: 227px;\n\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    width: 545px;\n    height: 298px;\n  }\n`;\n\nexport const TextCongrats = styled.p`\n  color: var(--dark-color);\n  font-weight: 500;\n  font-size: 16px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const TitleCongrats = styled.h2`\n  color: var(--dark-color);\n  font-weight: 500;\n  font-size: 24px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom: 52px;\n  }\n`;\n\nexport const ButtonCongrat = styled.button`\n  text-decoration: none;\n  box-sizing: border-box;\n  text-align: center;\n\n  width: 248px;\n  height: 40px;\n  cursor: pointer;\n  padding: 8px 0px;\n\n  color: var(--fon-color);\n  font-weight: 700;\n  font-size: 16px;\n\n  background: var(--blue-color);\n  border: none;\n  border-radius: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n\n  & svg {\n    fill: var(--fon-color);\n  }\n`;\n","import React from 'react';\nimport {\n  CongratsContainer,\n  TitleCongrats,\n  TextCongrats,\n  ButtonCongrat,\n} from './ModalCongrats.styled';\n\nconst ModalCongrats = ({ closeModal }) => {\n  const handleClose = () => {\n    closeModal();\n    localStorage.setItem('modalCongratsAlreadyOpened', 'true');\n  };\n\n  return (\n    <CongratsContainer closeModal={handleClose}>\n      <TitleCongrats>Congrats!</TitleCongrats>\n      <TextCongrats>Your registration is success</TextCongrats>\n      <ButtonCongrat\n        onClick={handleClose}\n        className=\"btn\"\n        type=\"button\"\n        color=\"blue\"\n        width=\"248px\"\n      ></ButtonCongrat>\n    </CongratsContainer>\n  );\n};\n\nexport default ModalCongrats;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport { CiEdit } from 'react-icons/ci';\nimport { RxCross1 } from 'react-icons/rx';\nimport { updateUser } from '../../redux/auth/operations ';\nimport { selectUser } from 'redux/auth/selectors';\nimport { EDIT_MODE } from './constants';\nimport EditPhoto from './EditPhoto';\n\nimport {\n  Container,\n  Box,\n  Title,\n  Label,\n  Input,\n  IconLogOut,\n  LogOut,\n  BtnLogOut,\n  BoxIconVerify,\n  ButtonEdit,\n  ButtonSave,\n} from './UserData.styled';\nimport UniversalModal from 'components/Modals/UniversalModal';\nimport ModalApproveAction from 'components/Modals/ModalApproveAction/ModalApproveAction';\nimport ModalCongrats from 'components/Modals/ModalCongrats/ModalCongrats';\n\nconst validationSchema = yup.object().shape({\n  Name: yup.string('Invalid name').min(3).max(16),\n  Email: yup.string().email('Invalid email'),\n  Phone: yup.string(),\n  Birthday: yup.string(),\n  City: yup.string(),\n});\n\nconst UserData = () => {\n  const dispatch = useDispatch();\n  const { name, email, phone, birthday, city } = useSelector(selectUser);\n  const [editMode, setEditMode] = useState(EDIT_MODE.defaultValue);\n  const [activeInput, setActiveInput] = useState(null);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalCongratsActive, setModalCongratsActive] = useState();\n\n  useEffect(() => {\n    const modalCongratsAlreadyOpened = localStorage.getItem(\n      'modalCongratsAlreadyOpened'\n    );\n    setModalCongratsActive(!JSON.parse(modalCongratsAlreadyOpened));\n  }, []);\n\n  const initialValues = {\n    Name: name || 'Name',\n    Email: email || 'anna00@gmail.com|',\n    Phone: phone || '+38000000000',\n    Birthday: birthday || '00.00.0000',\n    City: city || 'Kyiv',\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n\n  const handleEditMode = value => {\n    setEditMode(value);\n  };\n\n  const handleFieldChange = (fieldName, fieldValue) => {\n    setActiveInput(fieldName);\n    setFormValues(prevValues => ({\n      ...prevValues,\n      [fieldName]: fieldValue,\n    }));\n  };\n\n  const handleFormSubmit = values => {\n    const updatedValues = {\n      ...formValues,\n      ...values,\n    };\n\n    const hasEmptyValues = Object.values(updatedValues).some(\n      value => value === undefined || value === ''\n    );\n\n    if (hasEmptyValues) {\n      return;\n    }\n\n    const updatedData = new FormData();\n    updatedData.append('name', updatedValues.Name);\n    updatedData.append('email', updatedValues.Email);\n    updatedData.append('phone', updatedValues.Phone);\n    updatedData.append('birthday', updatedValues.Birthday);\n    updatedData.append('city', updatedValues.City);\n    dispatch(updateUser(updatedData));\n  };\n\n  const renderField = (name, errors) => {\n    const isActive = activeInput === name;\n    const isEditing = isActive && activeInput !== null;\n\n    return (\n      <>\n        <Label key={name}>\n          {name}:\n          <Field name={name}>\n            {({ field }) => (\n              <Input\n                type=\"text\"\n                {...field}\n                readOnly={editMode === EDIT_MODE.defaultValue}\n                className={isEditing ? 'editing' : ''}\n                onChange={e => {\n                  field.onChange(e);\n                  handleFieldChange(name, e.target.value);\n                }}\n              />\n            )}\n          </Field>\n        </Label>\n        <p style={{ color: 'red', fontSize: '11px' }}>\n          {errors && errors[name]}\n        </p>\n      </>\n    );\n  };\n\n  return (\n    <Container>\n      <Title>My information:</Title>\n\n      <Box>\n        <EditPhoto editMode={editMode} />\n        <Formik\n          sx={{ position: 'relative' }}\n          initialValues={formValues}\n          onSubmit={handleFormSubmit}\n          validationSchema={validationSchema}\n        >\n          {({ errors }) => (\n            <Form>\n              <ButtonEdit variant=\"text\">\n                {editMode === EDIT_MODE.defaultValue ? (\n                  <CiEdit\n                    onClick={() => handleEditMode(EDIT_MODE.editModeValue)}\n                  />\n                ) : (\n                  <RxCross1\n                    onClick={() => handleEditMode(EDIT_MODE.defaultValue)}\n                  />\n                )}\n              </ButtonEdit>\n\n              {Object.keys(formValues).map(field => renderField(field, errors))}\n\n              <LogOut>\n                {editMode === EDIT_MODE.defaultValue && (\n                  <BtnLogOut type=\"button\" onClick={() => setModalActive(true)}>\n                    Log Out\n                    <IconLogOut />\n                  </BtnLogOut>\n                )}\n                {editMode === EDIT_MODE.editModeValue && (\n                  <BoxIconVerify>\n                    <ButtonSave\n                      variant=\"contained\"\n                      type=\"submit\"\n                      className=\"custom-button\"\n                      style={{\n                        backgroundColor: '#54adff',\n                      }}\n                    >\n                      Save\n                    </ButtonSave>\n                  </BoxIconVerify>\n                )}\n                <UniversalModal active={modalActive} setActive={setModalActive}>\n                  <ModalApproveAction\n                    modalClose={() => {\n                      setModalActive(false);\n                    }}\n                  />\n                </UniversalModal>\n              </LogOut>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n      <UniversalModal\n        active={modalCongratsActive}\n        setActive={setModalCongratsActive}\n      >\n        <ModalCongrats\n          closeModal={() => {\n            setModalCongratsActive(false);\n          }}\n        />\n      </UniversalModal>\n    </Container>\n  );\n};\n\nexport default UserData;\n","export const selectPetsInfo = state => state.pets.petsInfo;\n\nexport const selectIsLoading = state => state.pets.isLoading;\n\nexport const selectError = state => state.pets.error;\n\nconst petSelectors = {\n  selectPetsInfo,\n  selectIsLoading,\n  selectError,\n};\n\nexport default petSelectors;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n// import { Typography } from '@mui/material';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 703px;\n    margin: 0 0 40px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: inline-flex;\n\n    width: 821px;\n    margin: 35px 0 0 0;\n  }\n`;\n\nexport const Title = styled.p`\n  color: black;\n  color: black;\n  font-weight: 500;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  font-size: 28px;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Button = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 40px;\n  font-family: 'Manrope', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n  align-items: center;\n  letter-spacing: 0.04em;\n  gap: 15px;\n  cursor: pointer;\n  border: none;\n  box-sizing: border-box;\n  color: #fef9f9;\n  background: #54adff;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  &:hover {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 280px;\n  @media screen and (min-width: 768px) {\n    width: 703px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 821px;\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  box-shadow: 3px 8px 8px rgba(136, 198, 253, 0.19);\n  background-color: #ffffff;\n  border-radius: 20px;\n  padding: 16px 20px 40px;\n  @media screen and (min-width: 748px) {\n    border-radius: 40px;\n    display: flex;\n    gap: 20px;\n    padding: 20px;\n  }\n  :not(:first-of-type) {\n    margin-top: 20px;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 240px;\n  height: 240px;\n  border-radius: 20px;\n  object-fit: cover;\n  @media screen and (min-width: 748px) and (max-width: 1279.98px) {\n    width: 128px;\n    height: 128px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 161px;\n    height: 161px;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  line-height: 1.57;\n  margin: 0;\n  margin-top: 12px;\n  @media screen and (min-width: 748px) {\n    font-size: 16px;\n    :first-of-type {\n      margin-top: 0;\n    }\n    :not(:first-of-type) {\n      margin-top: 16px;\n    }\n  }\n`;\n\nexport const Highlight = styled.span`\n  font-weight: 700;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  color: #54adff;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deletePet } from 'redux/pets/operations';\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\nimport { Image, Description, Highlight, Button } from './UserPetsList.styled';\nimport Box from '@mui/material/Box';\n\nexport const UserPetItem = ({ pet }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div>\n        <Image src={pet.imageURL} alt=\"pet description\" />\n      </div>\n      <Box\n        sx={{\n          position: 'relative',\n          width: '100%',\n        }}\n      >\n        <Description>\n          <Highlight>Name:</Highlight> {pet.name}\n        </Description>\n\n        <Button type=\"button\" onClick={() => dispatch(deletePet(pet._id))}>\n          <DeleteOutlinedIcon size=\"42\" />\n        </Button>\n\n        <Description>\n          <Highlight>Date of birth:</Highlight> {pet.date}\n        </Description>\n        <Description>\n          <Highlight>Breed:</Highlight> {pet.type}\n        </Description>\n        <Description>\n          <Highlight>Comments:</Highlight> {pet.comment}\n        </Description>\n      </Box>\n    </>\n  );\n};\n\nexport default UserPetItem;\n","import { List, ListItem } from './UserPetsList.styled';\nimport UserPetItem from './UserPetItem';\n\nexport const UserPetsList = ({ pets }) => {\n  return (\n    <List>\n      {pets.length > 0 &&\n        pets.map(pet => (\n          <ListItem key={pet._id}>\n            <UserPetItem pet={pet} />\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n\nexport default UserPetsList;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-family: 'Manrope', 'Helvetica', 'Arial', sans-serif;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Notification = styled.div`\n  border-radius: 20px;\n  padding: 25px;\n  box-shadow: 3px 8px 8px rgba(136, 198, 253, 0.19);\n  width: 280px;\n  background-color: #ffffff;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    width: 703px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 821px;\n  }\n`;\n","import { Notification, Text } from './NotFound.styled';\n\nconst NotFound = () => {\n  return (\n    <>\n      <Notification>\n        <Text>You have not added any pets </Text>\n      </Notification>\n    </>\n  );\n};\n\nexport default NotFound;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectPetsInfo, selectIsLoading } from 'redux/pets/selectors';\nimport { useEffect } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport {\n  Container,\n  Title,\n  Button,\n  TitleContainer,\n} from './UserPetsData.styled';\nimport UserPetsList from 'components/UserPetsData/UserPetsList/UserPetsList';\nimport NotFound from './NotFound';\nimport { fetchPets } from 'redux/pets/operations';\n\nconst UserPetsData = () => {\n  const petsInfo = useSelector(selectPetsInfo);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPets()).catch(error => console.log(error));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <TitleContainer>\n        <Title>My pets:</Title>\n        <Button to=\"/add-pet\">\n          Add pet <AddIcon />\n        </Button>\n      </TitleContainer>\n\n      {!isLoading && !petsInfo.length > 0 ? (\n        <NotFound />\n      ) : (\n        <UserPetsList pets={petsInfo} />\n      )}\n    </Container>\n  );\n};\n\nexport default UserPetsData;\n","import UserData from 'components/UserData';\nimport UserPetsData from 'components/UserPetsData/UserPetsData';\n\nconst UserPage = () => {\n  return (\n    <>\n      <UserData />\n      <UserPetsData />\n    </>\n  );\n};\n\nexport default UserPage;\n"],"names":["EDIT_MODE","ButtonSave","styled","Button","_templateObject","_taggedTemplateLiteral","ButtonEdit","_templateObject2","Container","_templateObject3","Title","_templateObject4","Box","_templateObject5","PictureBox","_templateObject6","PictureWrapper","_templateObject7","Picture","_templateObject8","EditPicture","_templateObject9","EditBtnPicture","_templateObject10","IconWrapperVerify","_templateObject11","IconWrapperRefuse","_templateObject12","Label","_templateObject13","Input","Field","_templateObject14","LogOut","_templateObject15","BtnLogOut","_templateObject16","IconLogOut","CiLogout","_templateObject17","Camera","BsCamera","_templateObject18","BoxIconVerify","CiEdit","_templateObject19","_templateObject20","IconVerify","AiOutlineCheck","_templateObject21","IconRefuse","RxCross1","_templateObject22","_ref","editMode","_useState","useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","isEditingPhoto","setIsEditingPhoto","fileInputRef","useRef","dispatch","useDispatch","avatarURL","useSelector","selectUser","handleConfirmPhoto","updatedData","FormData","append","name","updateAvatars","_jsxs","children","_jsx","src","URL","createObjectURL","alt","onClick","current","click","ref","type","style","display","onChange","event","file","target","files","_Fragment","CongratsContainer","TextCongrats","TitleCongrats","ButtonCongrat","closeModal","handleClose","localStorage","setItem","className","color","width","validationSchema","yup","shape","Name","min","max","Email","email","Phone","Birthday","City","_useSelector","phone","birthday","city","setEditMode","activeInput","setActiveInput","_useState5","_useState6","modalActive","setModalActive","_useState7","_useState8","modalCongratsActive","setModalCongratsActive","useEffect","modalCongratsAlreadyOpened","getItem","JSON","parse","initialValues","_useState9","_useState10","formValues","setFormValues","handleEditMode","value","renderField","errors","isEditing","field","_objectSpread","readOnly","e","fieldName","fieldValue","prevValues","_defineProperty","fontSize","EditPhoto","Formik","sx","position","onSubmit","values","updatedValues","Object","some","undefined","updateUser","_ref2","Form","variant","keys","map","backgroundColor","UniversalModal","active","setActive","ModalApproveAction","modalClose","ModalCongrats","selectPetsInfo","state","pets","petsInfo","selectIsLoading","isLoading","TitleContainer","NavLink","List","ListItem","Image","Description","Highlight","pet","imageURL","deletePet","_id","DeleteOutlinedIcon","size","date","comment","length","UserPetItem","Text","Notification","fetchPets","catch","error","console","log","to","AddIcon","NotFound","UserPetsList","UserData","UserPetsData"],"sourceRoot":""}